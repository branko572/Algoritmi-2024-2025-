Возови
На една железничка станица дошло до расипување на еден воз. За да се искористат вагоните кои се во функционална состоjба, потребно е да се направи
прераспределување на истите за да се добие нов воз. Откачувањето на вагоните од расипаниот воз се прави еден по еден од страна на последниот вагон. На
истата шина во спротивна насока поставена е новата локомотива на коjа ´ке се
прикачуваат вагоните од стариот воз кои се во функционална состоjба (прикачувањето секогаш се врши на последниот вагон), т.е. со оваа нова локомотива
´ке прави новиот воз. Нека вагоните на расипаниот воз се обележани со сериски
броеви, освен оние кои се во нефункционална состоjба, тие се обележани се со 0.
При формирање на новиот воз треба да се внимава вагоните да бидат сортирани според сериските броеви и тоа во опа´гачки редослед, гледаj´ки од страна на
локомотивата.
За да се изврши прераспределба на вагоните се користи една помошна кружна
шина (паралелна на онаа каj што се поставени стариот и новиот воз). На оваа
помошна кружна шина вагоните се вадат по истиот редослед по коj се додаваат.
Вагоните кои излегуваат од оваа помошна шина може или да се прикачуваат на
новиот воз на краj, или на стариот воз на краj или на краjот на самата шина (т.е.
да се прередат од почеток на краj на истата шина зошто е кружна). Вагоните од
стариот воз (кои се откачуваат) може да се прикачуваат на краj на помошната
шина или на краj на новиот воз. Истото важи и за вагоните на новиот воз. Ваша
задача е да направите алгоритам коj што ´ке го формира новиот воз со вагони во
функционална состоjба.
Влез: Во влезот е даден прво се вкупниот броj на вагони на расипаниот воз.
Следно се дава во секоj нареден ред соодветно сериските броеви на вагоните од
расипаниот воз.
Излез: На излез треба да се испечати состоjбата на новиот воз со сериските
броеви (почнуваj´ки од последниот вагон).
Пример:
Влез:
30
55
100
44
33
0
0
22
125
5
11
8
60
4
21
90
12
56
108
404
3
0
0
22
0
110
0
6
0
17
0
71
Излез:
3 4 5 6 8 11 12 17 21 22 22 33 44 55 56 60 71 90 100 108 110 404


public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        sc.nextLine();
        ArrayQueue<Integer> q = new ArrayQueue<>(N);
        for (int i = 0; i < N; i++) {
            q.enqueue(sc.nextInt());
        }

        Integer[] temp = new Integer[N];
        for (int i = 0; i < N; i++) {
            temp[i] = q.dequeue();
        }

        Arrays.sort(temp);

        for(Integer i : temp){
            q.enqueue(i);
        }
        while (!q.isEmpty()) {
            int n = q.dequeue();
            if(n != 0){
                System.out.print(n + " ");  // Use 'n', not q.dequeue()
            }
        }

    }
}


