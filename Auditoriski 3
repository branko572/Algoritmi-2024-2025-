Задача 1

• Дадени се N точки (N >= 2) во
дводимензионален простор. Пресметајте кое
е најмалото растојание помеѓу две точки

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class Main {
    static final double INF = 10000.0;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        System.out.print("Enter the number of points (N >= 2): ");
        int N = Integer.parseInt(br.readLine());
        Point[] tocki = new Point[N];

        for (int i = 0; i < N; i++) {
            System.out.print("Enter x and y for point " + (i + 1) + ": ");
            String[] pom = br.readLine().split(" ");
            int x = Integer.parseInt(pom[0]);
            int y = Integer.parseInt(pom[1]);
            tocki[i] = new Point(x, y);
        }

        System.out.println("The smallest distance between two points is: " + najmalorastojanie(tocki, N));
    }

    public static double najmalorastojanie(Point[] tocki, int n) {
        double best = INF;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                double r = tocki[i].rastojanie(tocki[j]);
                best = Math.min(r, best);
            }
        }
        return best;
    }
}

class Point {
    int x;
    int y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public double rastojanie(Point p) {
        return Math.sqrt((this.x - p.x) * (this.x - p.x) + (this.y - p.y) * (this.y - p.y));
    }
}


----------------------------------------------------------------------------------------------------------------


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

class Point {
    double x;
    double y;

    Point(double x, double y) {
        this.x = x;
        this.y = y;
    }
}

class BruteForce {
    static final double INF = 1000000.0;

    double rastojanie(Point a, Point b) {
        return Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
    }

    double najmalo_rastojanie(Point[] p, int n) {
        double best = INF;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                best = Math.min(best, rastojanie(p[i], p[j]));
            }
        }
        return best;
    }
}

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BruteForce bf = new BruteForce();

        System.out.print("Enter the number of points (N >= 2): ");
        int N = Integer.parseInt(br.readLine());
        Point[] points = new Point[N];

        for (int i = 0; i < N; i++) {
            System.out.print("Enter x and y for point " + (i + 1) + ": ");
            String[] coords = br.readLine().split(" ");
            double x = Double.parseDouble(coords[0]);
            double y = Double.parseDouble(coords[1]);
            points[i] = new Point(x, y);
        }

        double closestDistance = bf.najmalo_rastojanie(points, N);
        System.out.println("The smallest distance between two points is: " + closestDistance);
    }
}


Задача 2

• Дадена е шаховска табла. Пресметајте на
колку различни начини можат да се постават
две “кралици” без да се напаѓаат една со
друга. Две “кралици” се напаѓаат ако се
наоѓаат во ист ред, колона или дијагонала.


 class BruteForceChess {

    int dali_se_napagaat(int i1, int j1, int i2, int j2) {
        if (i1 == i2) // ista redica
        {
            return 1;
        }
        if (j1 == j2) // ista kolona
        {
            return 1;
        }
        if (Math.abs(i1 - i2) == Math.abs(j1 - j2)) // ista dijagonala
        {
            return 1;
        }
        return 0;
    }

    int broj_na_nacini() {
        int i1, j1, i2, j2;
        int rezultat = 0;

        for (i1 = 0; i1 < 8; i1++) {
            for (j1 = 0; j1 < 8; j1++) {
                for (i2 = 0; i2 < 8; i2++) {
                    for (j2 = 0; j2 < 8; j2++) {
                        if (dali_se_napagaat(i1, j1, i2, j2) == 0) {
                            rezultat++;
                        }
                    }
                }
            }
        }

        return rezultat;
    }



    // printf("%d\n", min_broj_moneti(79));
    public static void main(String[] args) {

        BruteForceChess bf = new BruteForceChess();

        System.out.println("Broj na nacini na rasporeduvanje na kralici: " + bf.broj_na_nacini());
    }

}









